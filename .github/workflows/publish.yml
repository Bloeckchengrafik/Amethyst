name: Publish

on: [push, workflow_dispatch]

jobs:
  publish:
    # To enable auto publishing to github, update your electron publisher
    # config in package.json > "build" and remove the conditional below
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v1

      - name: Install Node and NPM
        uses: actions/setup-node@v1
        with:
          node-version: 16.6
          cache: npm

      - name: Install dependencies
        run: |
          npm install

      # - name: Publish releases
      #   env:
      #     # These values are used for auto updates signing
      #     APPLE_ID: ${{ secrets.APPLE_ID }}
      #     APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
      #     CSC_LINK: ${{ secrets.CSC_LINK }}
      #     CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      #     # This is used for uploading release assets to github
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     npm run publish
      - name: Compile & release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        env:
          VITE_APP_VERSION: ${{ needs.draft.outputs.version }}
        with:
          build_script_name: build

          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: true

          # Sometimes the build may fail due to a connection problem with Apple, GitHub, etc. servers.
          # This option will restart the build as many attempts as possible
          max_attempts: 3


          # Code Signing params

          # Base64-encoded code signing certificate for Windows
          # windows_certs: ''

          # Password for decrypting `windows_certs`
          # windows_certs_password: ''

          # Base64-encoded code signing certificate for macOS
          # mac_certs: ''

          # Password for decrypting `mac_certs`
          # mac_certs_password: ''